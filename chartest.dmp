00001  0000             ; 10 SYS (4096)
00002  0001             
00003  0001             *=$0801
00004  0801             
00005  0801  0E 08 0A              BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $34, $30, $39, $36, $29, $00, $00, $00
00006  0810             
00007  0810             *=$1000
00008  1000             
00009  1000             MAIN
00010  1000  A9 00                 LDA #0
00011  1002  8D 00 60              STA $6000 ;PLAYER X
00012  1005  8D 01 60              STA $6001 ; BULLETX
00013  1008  8D 02 60              STA $6002 ;MOVEMENTTIMER
00014  100B             
00015  100B             
00016  100B             
00017  100B             
00018  100B             
00019  100B             
00020  100B             START
00021  100B                        
00022  100B  A9 51                 LDA #81  ;STORE BALLCHARRECTER IN ACCUMALTOR
00023  100D  AE 00 60              LDX $6000 ;STORE THE PLAYER X IN THE X REGISTER
00024  1010  20 16 10              JSR CHECKFORINPUT
00025  1013  4C 0B 10              JMP START  ;LOOP BACK UP
00026  1016                        
00027  1016             
00028  1016             
00029  1016             
00030  1016             
00031  1016             
00032  1016             
00033  1016             
00034  1016             
00035  1016             CHECKFORINPUT 
00036  1016  A9 01                 LDA #%0000001 ;LOAD A BITMASK NUMBER IN THE ACCUMALTOR
00037  1018  2C 00 DC              BIT $DC00 ;CHECK FOR BIT 0
00038  101B  F0 1D                 BEQ UP ;IF SO GO TO UP
00039  101D  A9 02                 LDA #%0000010 ;LOAD A BITMASK NUMBER IN THE ACCUMALTOR
00040  101F  2C 00 DC              BIT $DC00 ;CHECK FOR BIT 1
00041  1022  F0 1E                 BEQ DOWN ;IF SO GO TO DOWN
00042  1024  A9 04                 LDA #%0000100 ;LOAD A BITMASK NUMBER IN THE ACCUMALTOR
00043  1026  2C 00 DC              BIT $DC00 ;CHECK FOR BIT 2
00044  1029  F0 1F                 BEQ LEFT ;IF SO GO TO LEFT
00045  102B  A9 08                 LDA #%0001000 ;LOAD A BITMASK NUMBER IN THE ACCUMALTOR
00046  102D  2C 00 DC              BIT $DC00 ;CHECK FOR BIT 3
00047  1030  F0 22                 BEQ RIGHT ;IF SO GO TO RIGHT
00048  1032  A9 10                 LDA #%0010000 ;LOAD A BITMASK NUMBER IN THE ACCUMALTOR
00049  1034  2C 00 DC              BIT $DC00 ;CHECK FOR BIT 4
00050  1037  F0 25                 BEQ FIRE ;IF SO GO TO FIRE
00051  1039  60                    RTS
00052  103A             
00053  103A             
00054  103A             
00055  103A             
00056  103A             
00057  103A             
00058  103A             
00059  103A             
00060  103A             UP
00061  103A  A9 15                 LDA #21 ;LOAD A INTO ACCUMALTOR
00062  103C  8D 00 04              STA 1024 ;WRITE THIS TO THE FIRTSCREEN POSITION
00063  103F  4C 0B 10              JMP START ;GO BACK TO START
00064  1042             DOWN       
00065  1042  A9 04                 LDA #4 ;LOAD D INTO ACCUMALTOR
00066  1044  8D 00 04              STA 1024 ;WRITE THIS TO THE FIRTSCREEN POSITION
00067  1047  4C 0B 10              JMP START ;GO BACK TO START
00068  104A             LEFT
00069  104A  AD 02 60              LDA $6002 ;LOADS TIMER INTO REGISTER A
00070  104D  C9 00                 CMP #0 ;CHECKS IF THIS IS AT ZERO
00071  104F  F0 15                 BEQ MOVEPLAYER ;IF SO GO MOVE PLAYER
00072  1051  4C 0B 10              JMP START ;GO BACK TO START
00073  1054             RIGHT
00074  1054  AD 02 60              LDA $6002 ;LOADS TIMER INTO REGISTER A
00075  1057  C9 00                 CMP #0 ;CHECKS IF THIS IS AT ZERO
00076  1059  F0 0B                 BEQ MOVEPLAYER ;IF SO MOVE PLAYER
00077  105B  4C 0B 10              JMP START ;GO BACK TO START
00078  105E             FIRE
00079  105E  A9 56                 LDA #86 ;LOAD CROSS INTO ACCUMALTOR
00080  1060  8D 00 04              STA 1024 ;WRITE THIS TO THE FIRTSCREEN POSITION
00081  1063  4C 0B 10              JMP START ;GO BACK TO START
00082  1066             MOVEPLAYER 
00083  1066  EE 00 60              INC $6000
00084  1069  EE 21 D0              INC $D021
00085  106C  A9 37                 LDA #55
00086  106E  8D 00 04              STA 1024
00087  1071  4C 0B 10              JMP START
00088  1074             
00089  1074             
00090  1074             

******* 9 Label(s) *******
checkforinput = $1016 
down = $1042 
fire = $105E 
left = $104A 
Main = $1000 
moveplayer = $1066 
right = $1054 
start = $100B 
up = $103A 

******* 1 Unused label(s) *******
Main

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

